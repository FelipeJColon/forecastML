% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lagged_df.R
\name{create_lagged_df}
\alias{create_lagged_df}
\title{Create model training and forecasting datasets with lagged, grouped, and static features}
\usage{
create_lagged_df(data, type = c("train", "forecast"), outcome_cols = 1,
  horizons, lookback = NULL, lookback_control = NULL, groups = NULL,
  static_features = NULL, dates = NULL, frequency = NULL,
  use_future = FALSE)
}
\arguments{
\item{data}{A data.frame with the target to be forecasted and features/predictors. An optional date column can be given in the 'dates' argument
(required for grouped time-series). Note that forecastML only works with regularly spaced time/date intervals and that missing
rows--usually due to periods when no data was collected--will result in poorly trained models due to incorrect predictor lags.}

\item{type}{The type of dataset to return--(a) model training or (b) forecast prediction. The default is 'train'.}

\item{outcome_cols}{The column index--an integer--of the target to be forecasted. Forecasting only one outcome column is allowed at present, however,
groups of time-series can be forecasted if they are stacked vertically in a long dataset and the 'groups', 'dates', and 'frequency' arguments
are specified.}

\item{horizons}{A numeric vector of one or more forecast horizons, h, measured in dataset rows. For each horizon, 1:h
forecasts are returned (e.g., 'horizon = 12' trains a model to minimize 1 to 12-step-ahead error and returns forecasts
for 1:12 steps into the future). If \code{dates} are given, a horizon of 1, for example, would equal 1 * \code{frequency} in calendar time.}

\item{lookback}{A numeric vector giving the lags--in dataset rows--for creating the lagged features. All non-grouping and
non-static features in the input dataset, 'data', are lagged by the same values which, for
non-grouped time-series, will produce an input dataset with dimensions
nrow(data) by (n_features * length(lookback)). Lags that don't support direct forecasting for a given horizon
are dropped. Either \code{lookback} or \code{lookback_control} need to be specified.}

\item{lookback_control}{A list of numeric vectors, specifying potentially unique lags for each feature. The length
of the list should equal ncol(data) and be ordered the same as the columns in 'data'. For grouped time-series, lags for the grouping column(s)
and static feature columns should have a lookback_control value of 0. \code{list(NULL)} \code{lookback_control} values drop columns from the input dataset.
Lags that don't support direct forecasting for a given horizon
are dropped. Either \code{lookback} or \code{lookback_control} need to be specified.}

\item{groups}{Column name(s) that identify the groups/hierarchies when multiple time-series are present. These columns are used as model predictors but are not lagged.
Note that combining feature lags with grouped time-series will result in NA values throughout the data.}

\item{static_features}{For grouped time-series only. Column name(s) that identify features that do not change through time.
These columns are used as model features but are not lagged.
Note that combining feature lags with grouped time-series will result in NA values throughout the data.}

\item{dates}{A vector or 1-column data.frame of dates with class 'Date'. The length of dates should equal nrow(data). Required if \code{groups} are given.}

\item{frequency}{A string taking the same input as \code{base::seq(..., by = "frequency")} e.g., '1 month', '7 days', etc. Required if \code{dates} are given.}

\item{use_future}{Boolean. If \code{TRUE}, the \code{future} package is used for creating lagged data.frames.
\code{multisession} or \code{multiprocess} futures are especially useful for (a) grouped time series with many groups and
(b) high-dimensional data sets with many lags per feature.}
}
\value{
A 'lagged_df' or 'grouped_lagged_df' S3 object: A list of data.frames with new columns for the lagged/non-lagged features.
The length of the returned list is equal to the number of forecast horizons and is in the order of
horizons supplied to the \code{horizons} argument. Horizon-specific datasets can be accessed with
\code{my_lagged_df$horizon_h} where 'h' gives the forecast horizon.

The contents of the returned data.frame(s) are as follows:

\describe{
  \item{\strong{type = 'train', non-grouped:}}{A data.frame of lagged features.}
  \item{\strong{type = 'train', grouped:}}{A data.frame of unlagged grouping columns followed by lagged and static features.}
  \item{\strong{type = 'forecast', non-grouped:}}{(1) An 'index' column giving the row index or date of the
  forecast periods (e.g., a 100 row non-date-based training dataset would start with an index of 101). (2) A 'horizon' column
  that indicates the forecast period from 1:max(horizons). (3) Lagged features identical to the
  'train', non-grouped dataset.}
  \item{\strong{type = 'forecast', grouped:}}{(1) An 'index' column giving the date of the
  forecast periods. The first forecast date for each group is the maximum date from the \code{dates} argument
  + 1 * \code{frequency} which is the user-supplied date frequency.(2) A 'horizon' column that indicates
  the forecast period from \code{1:max(horizons)}. (3) Lagged and static features identical to the train', grouped dataset.}
}
}
\description{
Create a list of datasets with lagged, grouped, and static features to (a) train forecasting models for
specified forecast horizons and (b) forecast into the future with a trained ML model.
}
\section{Methods and related functions}{


The output of of \code{create_lagged_df} is passed into

\itemize{
  \item \code{\link{create_windows}}
}

and has the following generic S3 methods

\itemize{
  \item \code{\link{summary}}
  \item \code{\link{plot}}
}
}

\examples{
\donttest{
# Sampled Seatbelts data from the R package datasets.
data("data_seatbelts", package = "forecastML")
#------------------------------------------------------------------------------
# Example 1 - Training data for 12 horizon-specific models w/ common lags per predictor.
horizons <- 1:12
lookback <- 1:15

data_train <- create_lagged_df(data_seatbelts, type = "train", outcome_cols = 1,
                               lookback = lookback, horizon = horizons)
head(data_train[[length(horizons)]])

# Example 1 - Forecasting dataset
# The last 'nrow(data_seatbelts) - horizon' rows are automatically used from data_seatbelts.
data_forecast <- create_lagged_df(data_seatbelts, type = "forecast", outcome_cols = 1,
                                  lookback = lookback, horizon = horizons)
head(data_forecast[[length(horizons)]])
#------------------------------------------------------------------------------
# Example 2 - Training data for one 3-month horizon model w/ unique lags per predictor.
horizons <- 3
lookback <- list(c(3, 6, 9, 12), c(4:12), c(6:15), c(8))

data_train <- create_lagged_df(data_seatbelts, type = "train", outcome_cols = 1,
                               lookback_control = lookback, horizon = horizons)
head(data_train[[length(horizons)]])
#------------------------------------------------------------------------------
}
}
