% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lagged_df.R
\name{create_lagged_df}
\alias{create_lagged_df}
\title{Create datasets with lagged features}
\usage{
create_lagged_df(data, type = c("train", "forecast"), outcome_cols = 1,
  horizons, lookback = NULL, lookback_control = NULL, groups = NULL,
  dates = NULL, frequency = NULL)
}
\arguments{
\item{data}{A data.frame with the target to be forecasted and features/predictors. An optional date column can be given in the 'dates' argument
(required for grouped time-series). Note that forecastML only works with regularly spaced time/date intervals and that missing
rows--usually due to periods when no data was collected--will result in poorly trained models due to incorrect predictor lags.}

\item{type}{The type of dataset to return--(a) model training or (b)forecast prediction. The default is 'train'.}

\item{outcome_cols}{The column index--an integer--of the target to be forecasted. Forecasting only one outcome column is allowed at present, however,
groups of time-series can be forecasted if they are stacked vertically in a long dataset and the 'groups', 'dates', and 'frequency' arguments
are specified.}

\item{horizons}{A vector of one or more forecast horizons, h, measured in dataset rows. For each horizon, 1:h
forecasts are returned (e.g., 'horizon = 12' trains a model to minimize 12-step-ahead error and returns forecasts
for 1:12 steps into the future).}

\item{lookback}{A vector giving the lags--in dataset rows--for creating the lagged features. All non-grouping features in the
input dataset, 'data', are lagged by the same values which, for non-grouped time-series, will produce an input dataset with dimensions
nrow(data) by (n_features * length(lookback)). Lags that don't support direct forecasting for a given horizon
are dropped. Either 'lookback' or 'lookback_control' need to be specified.}

\item{lookback_control}{A list of vectors, specifying potentially unique lags for each feature. The length
of the list should equal ncol(data) and be ordered the same as the columns in 'data'. For grouped time-series, lags for the grouping columns
should have a lookback_control value of 0. 'NULL' lookback_control values drop columns from the input dataset.
Lags that don't support direct forecasting for a given horizon
are dropped. Either 'lookback' or 'lookback_control' need to be specified.}

\item{groups}{Column name(s) that give the groups/hierarchies when multiple time-series are present. These columns are used as model predictors but are not lagged.
Note that combining feature lags with grouped time-series will result in NA values throughout the data.}

\item{dates}{A vector or 1-column data.frame of dates with class 'Date'. The length of dates should equal nrow(data). Required if 'groups' are given.}

\item{frequency}{A string taking the same input as `scales::date_breaks()` e.g., '1 month', '7 days', etc.". Required if 'dates' are given.}
}
\value{
A 'lagged_df' or 'grouped_lagged_df' object: A list of data.frames with new columns for the lagged predictors.
}
\description{
Create a list of datasets with lagged predictors to (a) train forecasting models for
specified forecast horizons and (b) forecast with lagged predictors.
}
\examples{
\donttest{
# Sampled Seatbelts data from the R package datasets.
data("data_seatbelts", package = "forecastML")
#------------------------------------------------------------------------------
# Example 1 - Training data for 12 horizon-specific models w/ common lags per predictor.
horizons <- 1:12
lookback <- 1:15

data_train <- create_lagged_df(data_seatbelts, type = "train", outcome_cols = 1,
                               lookback = lookback, horizon = horizons)
head(data_train[[length(horizons)]])

# Example 1 - Forecasting dataset
# The last 'nrow(data_seatbelts) - horizon' rows are automatically used from data_seatbelts.
data_forecast <- create_lagged_df(data_seatbelts, type = "forecast", outcome_cols = 1,
                                  lookback = lookback, horizon = horizons)
head(data_forecast[[length(horizons)]])
#------------------------------------------------------------------------------
# Example 2 - Training data for one 3-month horizon model w/ unique lags per predictor.
horizons <- 3
lookback <- list(c(3, 6, 9, 12), c(4:12), c(6:15), c(8))

data_train <- create_lagged_df(data_seatbelts, type = "train", outcome_cols = 1,
                               lookback_control = lookback, horizon = horizons)
head(data_train[[length(horizons)]])
#------------------------------------------------------------------------------
}
}
